<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.whut.cs.bi.biz.mapper.PropertyMapper">
    
    <resultMap type="Property" id="PropertyResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="value" column="value" />
        <result property="updateBy"    column="update_by"    />
        <result property="ancestors"    column="ancestors"    />
        <result property="orderNum"    column="order_num"    />
        <result property="parentId"    column="parent_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectProperty">
        select create_time, update_time, id, name, value, create_by, update_by, ancestors, order_num, parent_id from bi_property
    </sql>

    <select id="selectPropertyList" parameterType="Property" resultMap="PropertyResult">
        <include refid="selectProperty"/>
        <where>
            <if test="id != null and id > 0"> id = #{id} or find_in_set(#{id}, ancestors)</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
        </where>
    </select>
    
    <select id="selectPropertyById" parameterType="Long" resultMap="PropertyResult">
        select create_time, update_time, id, name, value, create_by, update_by, ancestors, order_num, parent_id
        from bi_property
        where id = #{id}
    </select>

    <select id="selectChildrenObjectById" parameterType="Long" resultMap="PropertyResult">
		select * from bi_property where find_in_set(#{objectId}, ancestors) order by order_num
	</select>

    <select id="getOrderNum" resultType="java.lang.Integer">
        select COUNT(*) from bi_property where parent_id = #{id}
    </select>

    <select id="getParentIdIsNullNum" resultType="java.lang.Integer">
        select COUNT(*) from bi_property where parent_id is null
    </select>

    <select id="selectChildrenByParentId" resultType="edu.whut.cs.bi.biz.domain.Property">
        select * from bi_property
        where
        <choose>
            <when test="parentId == null or parentId == 0">
                parent_id IS NULL
            </when>
            <otherwise>
                parent_id = #{parentId}
            </otherwise>
        </choose>
        order by order_num
    </select>

    <select id="selectPropertyByName" parameterType="Property" resultMap="PropertyResult">
        <include refid="selectProperty"/>
        <where>
            parent_id IS NULL
            <if test="name != null  and name != ''"> AND name like concat('%', #{name}, '%')</if>
        </where>
        order by order_num
    </select>

    <select id="selectAllChildrenById" resultType="edu.whut.cs.bi.biz.domain.Property">
        select * from bi.bi_property
        where
            find_in_set(#{id}, ancestors)
    </select>

    <select id="selectByRootIdAndName" resultType="edu.whut.cs.bi.biz.domain.Property">
        select * from bi_property
        where
            name = #{name}
            and find_in_set(#{propertyRootId}, ancestors)
    </select>

    <select id="selectPropertyListByIds" resultType="edu.whut.cs.bi.biz.domain.Property">
        select * from bi_property
        where
            id IN
            <foreach item="id" collection="idArray" index="index"
                     separator="," open="(" close=")">
                #{id}
            </foreach>
    </select>


    <insert id="insertProperty" parameterType="Property" useGeneratedKeys="true" keyProperty="id">
        insert into bi_property
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="value != null and value != ''">value,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="ancestors != null">ancestors,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="parentId != null">parent_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="value != null and value != ''">#{value},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="ancestors != null">#{ancestors},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="parentId != null">#{parentId},</if>
         </trim>
    </insert>

    <update id="updateProperty" parameterType="Property">
        update bi_property
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="ancestors != null">ancestors = #{ancestors},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="value != null and value != ''">value = #{value},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateObjectChildren" parameterType="java.util.List">
        UPDATE bi_property
        SET
        ancestors =
        <foreach collection="objects" item="item" index="index"
                 separator=" " open="CASE id" close="END">
            WHEN #{item.id} THEN #{item.ancestors}
        </foreach>,
        update_time = NOW()
        WHERE id IN
        <foreach collection="objects" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>


    <delete id="deletePropertyById" parameterType="Long">
        delete from bi_property where id = #{id}
    </delete>

    <delete id="deletePropertyByIds" parameterType="String">
        delete from bi_property where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteObjectChildren" parameterType="Long">
        delete from bi_property where find_in_set(#{objectId}, ancestors)
    </delete>

    <delete id="deleteObjectChildrenByIds" parameterType="String">
        delete from bi_property
        where
        <foreach collection="ids" item="id" separator=" or ">
            find_in_set(#{id}, ancestors)
        </foreach>
    </delete>

</mapper>