<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.whut.cs.bi.biz.mapper.DiseaseTypeMapper">

    <resultMap type="DiseaseType" id="DiseaseTypeResult">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="maxScale" column="max_scale"/>
        <result property="minScale" column="min_scale"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="selectColumn" column="select_column"/>
        <result property="threshold" column="threshold"/>
        <result property="groupName" column="group_name"/>
    </resultMap>

    <resultMap type="TemplateDiseaseTypeVO" id="TemplateDiseaseTypeVOResult" extends="DiseaseTypeResult">
        <result property="isSelected" column="isSelected"/>
    </resultMap>

    <sql id="selectDiseaseTypeVo">
        select id,
               name,
               code,
               max_scale,
               min_scale,
               status,
               create_by,
               create_time,
               update_by,
               update_time,
               remark,
               select_column,
               threshold,
               group_name
        from bi_disease_type
    </sql>

    <select id="selectDiseaseTypeList" parameterType="DiseaseType" resultMap="DiseaseTypeResult">
        <include refid="selectDiseaseTypeVo"/>
        <where>
            <if test="name != null and name != ''">
                AND name like concat('%', #{name}, '%')
            </if>
            <if test="code != null and code != ''">
                AND code = #{code}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''">
                and date_format(create_time,'%Y%m%d') &gt;= date_format(#{params.beginTime},'%Y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''">
                and date_format(create_time,'%Y%m%d') &lt;= date_format(#{params.endTime},'%Y%m%d')
            </if>
        </where>
        ORDER BY
            CAST(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 2), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 3), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 4), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 5), '.', -1) AS UNSIGNED)
    </select>

    <select id="selectDiseaseTypeAll" resultMap="DiseaseTypeResult">
        <include refid="selectDiseaseTypeVo"/>
        order by code
    </select>

    <select id="selectDiseaseTypeById" parameterType="Long" resultMap="DiseaseTypeResult">
        <include refid="selectDiseaseTypeVo"/>
        where id = #{id}
        ORDER BY
            CAST(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 2), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 3), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 4), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 5), '.', -1) AS UNSIGNED)
    </select>

    <select id="selectDiseaseTypeByCode" parameterType="String" resultMap="DiseaseTypeResult">
        <include refid="selectDiseaseTypeVo"/>
        where code = #{code}
        ORDER BY
            CAST(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 2), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 3), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 4), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 5), '.', -1) AS UNSIGNED)
    </select>

    <select id="checkDiseaseTypeUnique" parameterType="String" resultMap="DiseaseTypeResult">
        <include refid="selectDiseaseTypeVo"/>
        where code = #{code} and status = '0' limit 1
    </select>

    <select id="selectDiseaseTypeListByIds" resultMap="DiseaseTypeResult">
        <include refid="selectDiseaseTypeVo"/>
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and status = '0'
        order by code
    </select>

    <delete id="deleteDiseaseTypeById" parameterType="Long">
        delete
        from bi_disease_type
        where id = #{id}
    </delete>

    <delete id="deleteDiseaseTypeByIds" parameterType="Long">
        delete from bi_disease_type where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateDiseaseType" parameterType="DiseaseType">
        update bi_disease_type
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="code != null and code != ''">code = #{code},</if>
            <if test="maxScale != null">max_scale = #{maxScale},</if>
            <if test="minScale != null">min_scale = #{minScale},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="selectColumn != null">select_column = #{selectColumn},</if>
            <if test="threshold != null">threshold = #{threshold},</if>
            <if test="groupName != null and groupName != ''">group_name = #{groupName},</if>
            update_time = sysdate()
        </set>
        where id = #{id}
    </update>

    <update id="updateMaxScale">
        update bi_disease_type
        set max_scale = #{scale}
        where id = #{id}
    </update>

    <insert id="insertDiseaseType" parameterType="DiseaseType" useGeneratedKeys="true" keyProperty="id">
        insert into bi_disease_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="code != null and code != ''">code,</if>
            <if test="maxScale != null">max_scale,</if>
            <if test="minScale != null">min_scale,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="remark != null and remark != ''">remark,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="selectColumn != null">select_column,</if>
            <if test="threshold != null">threshold,</if>
            <if test="groupName != null and groupName != ''">group_name,</if>
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="code != null and code != ''">#{code},</if>
            <if test="maxScale != null">#{maxScale},</if>
            <if test="minScale != null">#{minScale},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="selectColumn != null">#{selectColumn},</if>
            <if test="threshold != null">#{threshold},</if>
            <if test="groupName != null and groupName != ''">#{groupName},</if>
            sysdate()
        </trim>
    </insert>

    <select id="selectTemplateDiseaseTypeList" resultMap="TemplateDiseaseTypeVOResult">
        SELECT
        d.id, d.name, d.code, d.max_scale, d.min_scale, d.status,
        d.remark, d.create_by, d.create_time, d.update_by, d.update_time,
        d.select_column, d.group_name,
        d.threshold, CASE WHEN td.template_object_id IS NOT NULL THEN 1 ELSE 0 END AS isSelected
        FROM bi_disease_type d
        LEFT JOIN bi_template_object_disease_type td ON d.id = td.disease_type_id
        AND td.template_object_id = #{templateObjectId}
        <where>
            <if test="diseaseType.name != null and diseaseType.name != ''">
                AND d.name like concat('%', #{diseaseType.name}, '%')
            </if>
            <if test="diseaseType.code != null and diseaseType.code != ''">
                AND d.code like concat('%', #{diseaseType.code}, '%')
            </if>
            <if test="diseaseType.status != null and diseaseType.status != ''">
                AND d.status = #{diseaseType.status}
            </if>
            <if test="diseaseType.isSelected != null">
                AND (td.template_object_id IS NOT NULL) = #{diseaseType.isSelected}
            </if>
        </where>
        ORDER BY
            CAST(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 2), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 3), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 4), '.', -1) AS UNSIGNED),
            CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(REPLACE(COALESCE(code, '0'), '-', '.'), '.0.0.0.0'), '.', 5), '.', -1) AS UNSIGNED)
    </select>

</mapper>