<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.whut.cs.bi.biz.mapper.BiObjectMapper">

    <resultMap type="BiObject" id="BiObjectResult">
        <id     property="id"        column="id"         />
        <result property="name"      column="name"       />
        <result property="parentId"  column="parent_id"  />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"  />
        <result property="status"    column="status"     />
        <result property="delFlag"   column="del_flag"   />
        <result property="longitude" column="longitude"  />
        <result property="latitude"  column="latitude"   />
        <result property="altitude"  column="altitude"   />
        <result property="position"  column="position"   />
        <result property="area"      column="area"       />
        <result property="adminDept" column="admin_dept" />
        <result property="weight"    column="weight"     />
        <result property="standardWeight" column="standard_weight" />
        <result property="videoFeed" column="video_feed" />
        <result property="props"     column="props"      />
        <result property="createBy"  column="create_by"  />
        <result property="createTime" column="create_time" />
        <result property="updateBy"   column="update_by"  />
        <result property="updateTime" column="update_time" />
        <result property="remark"     column="remark"     />
        <result property="parentName" column="parent_name" />
        <result property="count" column="count" />
        <result property="templateObjectId" column="template_object_id" />
        <collection property="children" ofType="BiObject">
            <id     property="id"        column="child_id"         />
            <result property="name"      column="child_name"       />
            <result property="parentId"  column="child_parent_id"  />
            <result property="ancestors" column="child_ancestors"   />
            <result property="orderNum"  column="child_order_num"  />
            <result property="status"    column="child_status"     />
            <result property="delFlag"   column="child_del_flag"   />
        </collection>
    </resultMap>

    <sql id="selectBiObjectVo">
        select o.id, o.name, o.parent_id, o.ancestors, o.order_num, o.status, o.del_flag, o.longitude, o.latitude,
               o.altitude, o.position, o.area, o.admin_dept, o.weight, o.video_feed, o.props, o.create_by, o.create_time, o.update_by,
               o.update_time, o.remark, o.template_object_id, o.count, tobj.weight as standard_weight
        from bi_object o
                 left join bi_template_object tobj on o.template_object_id = tobj.id
    </sql>

    <select id="selectBiObjectList" parameterType="BiObject" resultMap="BiObjectResult">
        SELECT t.*,
        c.id as child_id,
        c.name as child_name,
        c.parent_id as child_parent_id,
        c.ancestors as child_ancestors,
        c.order_num as child_order_num,
        c.status as child_status,
        c.del_flag as child_del_flag,
        tobj.weight as standard_weight
        FROM bi_object t
        LEFT JOIN bi_object c ON c.parent_id = t.id AND c.del_flag = '0'
        LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        <where>
            <if test="name != null and name != ''">
                AND t.name like concat('%', #{name}, '%')
            </if>
            <if test="status != null and status != ''">
                AND t.status = #{status}
            </if>
            <if test="parentId != null">
                AND t.parent_id = #{parentId}
            </if>
            AND t.del_flag = '0'
        </where>
        order by t.parent_id, t.order_num
    </select>

    <select id="selectBiObjectById" parameterType="Long" resultMap="BiObjectResult">
        SELECT t.*,
               p.name as parent_name,
               c.id as child_id,
               c.name as child_name,
               c.parent_id as child_parent_id,
               c.ancestors as child_ancestors,
               c.order_num as child_order_num,
               c.status as child_status,
               c.del_flag as child_del_flag,
               tobj.weight as standard_weight
        FROM bi_object t
                 LEFT JOIN bi_object p ON p.id = t.parent_id
                 LEFT JOIN bi_object c ON c.parent_id = t.id AND c.del_flag = '0'
                 LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        WHERE t.id = #{id} AND t.del_flag = '0'
    </select>

    <select id="selectChildrenByParentId" parameterType="Long" resultMap="BiObjectResult">
        <include refid="selectBiObjectVo"/>
        where o.parent_id = #{parentId} AND o.del_flag = '0' order by o.parent_id, o.order_num
    </select>

    <select id="selectChildrenById" parameterType="Long" resultMap="BiObjectResult">
        SELECT t.*,
               c.id as child_id,
               c.name as child_name,
               c.parent_id as child_parent_id,
               c.ancestors as child_ancestors,
               c.order_num as child_order_num,
               c.status as child_status,
               c.del_flag as child_del_flag,
               tobj.weight as standard_weight
        FROM bi_object t
                 LEFT JOIN bi_object c ON c.parent_id = t.id AND c.del_flag = '0'
                 LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        WHERE FIND_IN_SET(#{id}, t.ancestors) AND t.del_flag = '0'
        ORDER BY t.parent_id, t.order_num
    </select>

    <select id="selectChildrenByIdRemoveLeaf" parameterType="Long" resultMap="BiObjectResult">
        WITH RECURSIVE filtered_tree AS (
        <!-- 查询根节点 -->
        SELECT t.id, t.name, t.parent_id, t.ancestors, t.order_num, t.status, t.del_flag,
        t.longitude, t.latitude, t.altitude, t.position, t.area, t.admin_dept,
        t.weight, t.video_feed, t.props, t.create_by, t.create_time, t.update_by,
        t.update_time, t.remark, t.template_object_id, t.count,
        tobj.weight as standard_weight,
        1 AS level
        FROM bi_object t
        LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        WHERE t.id = #{id}
        AND t.del_flag = '0'
        AND (t.status != '1' OR t.status IS NULL)

        UNION ALL

        <!-- 递归查询子节点，并计算层级 -->
        SELECT c.id, c.name, c.parent_id, c.ancestors, c.order_num, c.status, c.del_flag,
        c.longitude, c.latitude, c.altitude, c.position, c.area, c.admin_dept,
        c.weight, c.video_feed, c.props, c.create_by, c.create_time, c.update_by,
        c.update_time, c.remark, c.template_object_id, c.count,
        tobj.weight as standard_weight,
        p.level + 1
        FROM bi_object c
        LEFT JOIN bi_template_object tobj ON c.template_object_id = tobj.id
        JOIN filtered_tree p ON c.parent_id = p.id
        WHERE c.del_flag = '0'
        AND (c.status != '1' OR c.status IS NULL)
        AND p.level &lt; 4
        )
        SELECT DISTINCT t.*
        FROM filtered_tree t
        ORDER BY t.parent_id, t.order_num
    </select>


    <insert id="insertBiObject" parameterType="BiObject" useGeneratedKeys="true" keyProperty="id">
        insert into bi_object
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="ancestors != null">ancestors,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="longitude != null">longitude,</if>
            <if test="latitude != null">latitude,</if>
            <if test="altitude != null">altitude,</if>
            <if test="position != null">position,</if>
            <if test="area != null">area,</if>
            <if test="adminDept != null">admin_dept,</if>
            <if test="weight != null">weight,</if>
            <if test="videoFeed != null">video_feed,</if>
            <if test="props != null">props,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="templateObjectId != null">template_object_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null">#{name},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="ancestors != null">#{ancestors},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="longitude != null">#{longitude},</if>
            <if test="latitude != null">#{latitude},</if>
            <if test="altitude != null">#{altitude},</if>
            <if test="position != null">#{position},</if>
            <if test="area != null">#{area},</if>
            <if test="adminDept != null">#{adminDept},</if>
            <if test="weight != null">#{weight},</if>
            <if test="videoFeed != null">#{videoFeed},</if>
            <if test="props != null">#{props},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="templateObjectId != null">#{templateObjectId},</if>
        </trim>
    </insert>

    <update id="updateBiObject" parameterType="BiObject">
        update bi_object
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="ancestors != null">ancestors = #{ancestors},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="altitude != null">altitude = #{altitude},</if>
            <if test="position != null">position = #{position},</if>
            <if test="area != null">area = #{area},</if>
            <if test="adminDept != null">admin_dept = #{adminDept},</if>
            <if test="weight != null">weight = #{weight},</if>
            <if test="videoFeed != null">video_feed = #{videoFeed},</if>
            <if test="props != null">props = #{props},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="count != null">count = #{count},</if>
            <if test="templateObjectId != null">template_object_id = #{templateObjectId},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateBiObjects" parameterType="java.util.List">
        update bi_object
        <set>
            `weight` =
            <foreach collection="objects" item="item" separator=" " open="CASE id " close="END,">
                WHEN #{item.id} THEN #{item.weight}
            </foreach>

            `update_time` =
            <foreach collection="objects" item="item" separator=" " open="CASE id " close="END,">
                WHEN #{item.id} THEN #{item.updateTime}
            </foreach>

            `update_by` =
            <foreach collection="objects" item="item" separator=" " open="CASE id " close="END,">
                WHEN #{item.id} THEN #{item.updateBy}
            </foreach>

            `count` =
            <foreach collection="objects" item="item" separator=" " open="CASE id " close="END">
                WHEN #{item.id} THEN #{item.count}
            </foreach>
        </set>
        where id in
        <foreach collection="objects" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>



    <delete id="deleteBiObjectById" parameterType="Long">
        update bi_object set del_flag = '1' where id = #{id}
    </delete>

    <delete id="deleteBiObjectByIds" parameterType="Long">
        update bi_object set del_flag = '1' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectBridges" resultMap="BiObjectResult">
        select o.*, t.weight as standard_weight
        from bi_object o
                 LEFT JOIN bi_template_object t ON o.template_object_id = t.id
        where o.parent_id = 0 and o.del_flag = '0'
        order by o.parent_id, o.order_num
    </select>

    <select id="selectComponentsByBridgeId" parameterType="Long" resultMap="BiObjectResult">
        select o.*, t.weight as standard_weight
        from bi_object o
                 LEFT JOIN bi_template_object t ON o.template_object_id = t.id
        where FIND_IN_SET(#{bridgeId}, o.ancestors) and o.del_flag = '0'
        order by o.parent_id, o.order_num
    </select>

    <update id="logicDeleteByRootObjectId">
        update bi_object
        set del_flag = '1',
            update_time = sysdate(),
            update_by = #{updateBy}
        where id = #{rootObjectId}
           or FIND_IN_SET(#{rootObjectId}, ancestors)
    </update>

    <update id="updateObjectChildren" parameterType="java.util.List">
        update bi_object set ancestors =
        <foreach collection="objects" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.ancestors}
        </foreach>
        where id in
        <foreach collection="objects" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>


    <select id="selectLeafNodes" parameterType="Long" resultMap="BiObjectResult">
        WITH RECURSIVE tree AS (
            -- 初始查询，获取根节点
            SELECT o.id, o.parent_id, o.name, o.weight, o.order_num, o.status, o.create_by, o.create_time,
                   o.update_by, o.update_time, o.remark, o.del_flag, o.props, t.weight as standard_weight
            FROM bi_object o
                     LEFT JOIN bi_template_object t ON o.template_object_id = t.id
            WHERE o.id = #{rootId}

            UNION ALL

            -- 递归查询子节点
            SELECT c.id, c.parent_id, c.name, c.weight, c.order_num, c.status, c.create_by,
                   c.create_time, c.update_by, c.update_time, c.remark, c.del_flag, c.props, t.weight as standard_weight
            FROM bi_object c
                     LEFT JOIN bi_template_object t ON c.template_object_id = t.id
                     INNER JOIN tree p ON c.parent_id = p.id
            WHERE c.del_flag = '0'
        )
        SELECT DISTINCT t.*
        FROM tree t
        WHERE NOT EXISTS (
            -- 查找没有子节点的节点（即叶子节点）
            SELECT 1
            FROM bi_object c
            WHERE c.parent_id = t.id
              AND c.del_flag = '0'
        )
          AND t.del_flag = '0'
        ORDER BY t.order_num;
    </select>

    <select id="selectDirectParentById" parameterType="Long" resultMap="BiObjectResult">
        select p.*, t.weight as standard_weight
        from bi_object c
                 join bi_object p on c.parent_id = p.id
                 LEFT JOIN bi_template_object t ON p.template_object_id = t.id
        where c.id = #{id}
          and p.del_flag = '0'
    </select>

    <select id="isLeafNode" resultType="java.lang.Boolean">
        SELECT EXISTS (
            SELECT 1
            FROM bi_object c1
            WHERE c1.parent_id = #{id}
              AND c1.del_flag = '0'
        ) AND NOT EXISTS (
            SELECT 1
            FROM bi_object c2
                     JOIN bi_object c1 ON c2.parent_id = c1.id
            WHERE c1.parent_id = #{id}
              AND c1.del_flag = '0'
              AND c2.del_flag = '0'
        )
    </select>

    <select id="selectBiObjectListByName" resultType="edu.whut.cs.bi.biz.domain.BiObject">
        SELECT t.*
        FROM bi_object t
        <where>
            <if test="name != null and name != ''">
                AND t.name = #{name}
            </if>
            <if test="parentId != null">
                AND t.parent_id = #{parentId}
            </if>
            AND t.del_flag = '0'
        </where>
        order by t.parent_id, t.order_num
    </select>

    <select id="selectBiObjects" resultMap="BiObjectResult" parameterType="java.util.Set">
        SELECT t.*,
        c.id as child_id,
        c.name as child_name,
        c.parent_id as child_parent_id,
        c.ancestors as child_ancestors,
        c.order_num as child_order_num,
        c.status as child_status,
        c.del_flag as child_del_flag,
        tobj.weight as standard_weight
        FROM bi_object t
        LEFT JOIN bi_object c ON FIND_IN_SET(t.id, c.ancestors) AND c.del_flag = '0'
        LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        WHERE t.id IN
        <foreach collection="rootObjectIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND t.del_flag = '0'
        ORDER BY t.parent_id, t.order_num
    </select>

    <select id="selectBiObjectAndChildrenThreeLevel" parameterType="Long" resultMap="BiObjectResult">
        WITH RECURSIVE filtered_tree AS (
        <!-- 查询根节点 -->
        SELECT t.id, t.name, t.parent_id, t.ancestors, t.order_num, t.status, t.del_flag,
        t.longitude, t.latitude, t.altitude, t.position, t.area, t.admin_dept,
        t.weight, t.video_feed, t.props, t.create_by, t.create_time, t.update_by,
        t.update_time, t.remark, t.template_object_id, t.count,
        tobj.weight as standard_weight,
        1 AS level
        FROM bi_object t
        LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        WHERE t.id = #{id}
        AND t.del_flag = '0'
        AND (t.status != '1' OR t.status IS NULL)

        UNION ALL

        <!-- 递归查询子节点，并计算层级 -->
        SELECT c.id, c.name, c.parent_id, c.ancestors, c.order_num, c.status, c.del_flag,
        c.longitude, c.latitude, c.altitude, c.position, c.area, c.admin_dept,
        c.weight, c.video_feed, c.props, c.create_by, c.create_time, c.update_by,
        c.update_time, c.remark, c.template_object_id, c.count,
        tobj.weight as standard_weight,
        p.level + 1
        FROM bi_object c
        LEFT JOIN bi_template_object tobj ON c.template_object_id = tobj.id
        JOIN filtered_tree p ON c.parent_id = p.id
        WHERE c.del_flag = '0'
        AND (c.status != '1' OR c.status IS NULL)
        AND p.level &lt; 3
        )
        SELECT DISTINCT t.*
        FROM filtered_tree t
        WHERE t.level &lt; 4
        ORDER BY t.parent_id, t.order_num
    </select>

    <!-- 批量更新子节点的ancestors -->
    <update id="batchUpdateAncestors">
        UPDATE bi_object
        SET ancestors = REPLACE(ancestors, #{oldAncestorsPrefix}, #{newAncestorsPrefix}),
            update_by = #{updateBy},
            update_time = sysdate()
        WHERE id != #{rootObjectId}
          AND ancestors LIKE CONCAT(#{oldAncestorsPrefix}, '%')
          AND del_flag = '0'
    </update>

    <!-- 批量插入BiObject对象 -->
    <insert id="batchInsertBiObjects" useGeneratedKeys="true" keyProperty="id">
        insert into bi_object (
        name, parent_id, ancestors, order_num, status, del_flag,
        longitude, latitude, altitude, position, area, admin_dept,
        weight, video_feed, props, create_by, create_time, update_by,
        update_time, remark, template_object_id
        ) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.name}, #{item.parentId}, #{item.ancestors}, #{item.orderNum}, #{item.status}, '0',
            #{item.longitude}, #{item.latitude}, #{item.altitude}, #{item.position}, #{item.area}, #{item.adminDept},
            #{item.weight}, #{item.videoFeed}, #{item.props}, #{item.createBy}, #{item.createTime}, #{item.updateBy},
            #{item.updateTime}, #{item.remark}, #{item.templateObjectId}
            )
        </foreach>
    </insert>

    <!-- 根据ID列表批量查询BiObject -->
    <select id="selectBiObjectsByIds" resultMap="BiObjectResult">
        <include refid="selectBiObjectVo"/>
        where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectBiObjectAndChildren" resultMap="BiObjectResult">
        -- 获取根节点
        SELECT t.*,
               c.id as child_id,
               c.name as child_name,
               c.parent_id as child_parent_id,
               c.ancestors as child_ancestors,
               c.order_num as child_order_num,
               c.status as child_status,
               c.del_flag as child_del_flag,
               tobj.weight as standard_weight
        FROM bi_object t
                 LEFT JOIN bi_object c ON c.parent_id = t.id AND c.del_flag = '0'
                 LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        WHERE t.id = #{rootId} AND t.del_flag = '0'

        UNION

        -- 获取所有子节点
        SELECT t.*,
               c.id as child_id,
               c.name as child_name,
               c.parent_id as child_parent_id,
               c.ancestors as child_ancestors,
               c.order_num as child_order_num,
               c.status as child_status,
               c.del_flag as child_del_flag,
               tobj.weight as standard_weight
        FROM bi_object t
                 LEFT JOIN bi_object c ON c.parent_id = t.id AND c.del_flag = '0'
                 LEFT JOIN bi_template_object tobj ON t.template_object_id = tobj.id
        WHERE FIND_IN_SET(#{rootId}, t.ancestors) AND t.del_flag = '0'
        ORDER BY parent_id, order_num
    </select>

</mapper>